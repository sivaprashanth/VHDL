----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    13:23:30 07/31/2018 
-- Design Name: 
-- Module Name:    topdivid - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity topdivid is
--generic (n: integer := 4); 
port(

clk:in std_logic;
	A: in std_logic;
	B: in std_logic;
	Go: in std_logic;
	Quotient :out std_logic_vector(3 downto 0);
	Remainder :out std_logic_vector(3 downto 0);
challenge:in std_logic_vector(3 downto 0);
response:out std_logic_vector(3 downto 0);
done: out  std_logic
);
end topdivid;

architecture Behavioral of topdivid is

component puftop port (
	     clock: in std_logic;
       pufinput: in std_logic_vector(3 downto 0) ;
		 pufout90 : out std_logic_vector(3 downto 0) 
		 );
      end component;

component trial 
--generic (n: integer := 4); 
port (
	     clk:in std_logic;
	A: in std_logic_vector(3 downto 0);
	B: in std_logic_vector(3 downto 0);
	Go: in std_logic;
	Quotient :out std_logic_vector(3 downto 0);
	Remainder :out std_logic_vector(3 downto 0);
	fmout : out std_logic;
	fmin : in std_logic;
	done: out  std_logic
		 );
      end component;		

signal pufinput       :  STD_LOGIC_VECTOR (3 downto 0);
signal  pufout90       :  STD_LOGIC_VECTOR (3 downto 0);
signal fmout : std_logic;
signal fmin : std_logic:='1';
signal dividend       :  STD_LOGIC_VECTOR (3 downto 0);
signal divisor       :  STD_LOGIC_VECTOR (3 downto 0);

begin
dividend<="111"&a;

divisor<="001"&b;

puf_inst: puftop
port map   (
clock => clk,
pufinput => challenge,
pufout90 =>pufout90         
); 

divider_inst: trial
port map   (
clk => clk,
A => dividend,
B => divisor,
Go => Go,
Quotient =>Quotient,
Remainder => Remainder, 
fmout => fmout, 
fmin => fmin,
done => done
);

-- new_divider crp authentication
seq1 : process(clk)
begin
if(clk'event and clk = '1' ) then 
if(pufout90        = "0001") then
fmin <= '1';
else
				fmin<='0';
--				Quotient <= "0000";
--					Remainder <= "0000";

end if;
end if;
end process;

response <=pufout90;       

end Behavioral;

